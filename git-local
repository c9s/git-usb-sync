#!/usr/bin/env perl
use strict;
use warnings;
use File::Find::Rule;
use File::Spec;
use File::Basename;
use Git;

my $subcmd = shift || 'sync';

my $repo = Git->repository (Directory => $ENV{PWD} );
my $wc_path = $repo->wc_path();

my $local_repo_parent = $ENV{GIT_LOCAL_REPO_PATH} || File::Spec->join($ENV{HOME},'gitrepos');
my $local_bare_repo = File::Spec->join( $local_repo_parent ,  basename( $wc_path ) . '.git' );

my $bare_repo = Git->repository( Repository => $local_bare_repo );
$bare_repo->repo_path();

my $branch = qx(git branch | grep "^\\*" );
$branch =~ s/[\s*]//g;

mkdir $local_repo_parent unless -d $local_repo_parent;

unless(-d $local_bare_repo ) {
    print STDERR "Local bare repository not found, creating one.\n";
    print STDERR "Creating directory: $local_bare_repo\n";
    mkdir $local_bare_repo;

    print STDERR "Initializing bare repository.\n";
    $bare_repo->command( 'init' , '--bare' );
}

# my @dirs = File::Find::Rule->directory->maxdepth( 1 )->in( $local_repo_parent );
# use Data::Dumper; warn Dumper( \@dirs );
unless( -d '.git' ) {
    print STDERR ".git directory not found, initializing.\n";
    qx(git init);
    qx(touch .gitignore);
    qx(git add .gitignore);
    qx(git commit -a -m "First commit. add .gitignore file." );
}

unless( qx( git remote | grep local ) ) {
    print STDERR "Remote local not found, creating one\n";
    $repo->command('remote', 'add', $local_bare_repo );
    $repo->command('push' ,'local','master');
}


if( $subcmd =~ /pull/ ) {
    if( $repo->command('diff') ) {
        die( 'Dirty' );
    }
    my $target_branch = shift || $branch;
    $repo->command_noisy( 'fetch' , 'local' );
    $repo->command_noisy( 'pull' , '--rebase' , 'local' , $target_branch );
}
elsif( $subcmd =~ /push/ ) {
    my $target_branch = shift || $branch;
    $repo->command_noisy( 'push' , 'local' , $target_branch );
}
elsif( $subcmd =~ /sync/ ) {
    if( $repo->command('diff') ) {
        die( 'Dirty' );
    }
    $repo->command_noisy( 'fetch' , 'local' );
    $repo->command_noisy( 'pull' , '--rebase' , 'local' , $branch );
    $repo->command_noisy( 'push' , 'local' , '--all' );
}

print STDERR "Done.\n";
